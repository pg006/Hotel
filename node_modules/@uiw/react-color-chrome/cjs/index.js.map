{
  "version": 3,
  "names": [
    "ChromeInputType",
    "Chrome",
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "style",
    "color",
    "inputType",
    "RGBA",
    "rectProps",
    "onChange",
    "other",
    "hsva",
    "validHex",
    "hexToHsva",
    "h",
    "s",
    "l",
    "a",
    "handleChange",
    "hsv",
    "handleColor",
    "useState",
    "type",
    "setType",
    "handleClick",
    "HSLA",
    "HEXA",
    "labelStyle",
    "paddingTop",
    "inputStyle",
    "textAlign",
    "paddingBottom",
    "borderRadius",
    "flexDirection",
    "width",
    "padding",
    "undefined",
    "filter",
    "Boolean",
    "join",
    "GithubPlacement",
    "TopLeft",
    "height",
    "newColor",
    "display",
    "alignItems",
    "marginRight",
    "background",
    "hsvaToRgbaString",
    "boxShadow",
    "flex",
    "newHue",
    "marginTop",
    "newAlpha",
    "userSelect",
    "reColor",
    "hsvaToHexa",
    "toLocaleUpperCase",
    "hsvaToHex",
    "_",
    "value",
    "test",
    "key",
    "displayName"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import React, { Fragment } from 'react';\nimport {\n  HsvaColor,\n  hsvaToRgbaString,\n  color as handleColor,\n  validHex,\n  hexToHsva,\n  hsvaToHex,\n  hsvaToHexa,\n} from '@uiw/color-convert';\nimport Github, { GithubProps, GithubPlacement } from '@uiw/react-color-github';\nimport Saturation from '@uiw/react-color-saturation';\nimport Hue from '@uiw/react-color-hue';\nimport Alpha from '@uiw/react-color-alpha';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport EditableInputRGBA from '@uiw/react-color-editable-input-rgba';\nimport EditableInputHSLA from '@uiw/react-color-editable-input-hsla';\nimport { useState } from 'react';\nimport Arrow from './Arrow';\n\nexport enum ChromeInputType {\n  HEXA = 'hexa',\n  RGBA = 'rgba',\n  HSLA = 'hsla',\n}\n\nexport interface ChromeProps extends Omit<GithubProps, 'colors'> {\n  inputType?: ChromeInputType;\n}\n\nconst Chrome = React.forwardRef<HTMLDivElement, ChromeProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-chrome',\n    className,\n    style,\n    color,\n    inputType = ChromeInputType.RGBA,\n    rectProps = {},\n    onChange,\n    ...other\n  } = props;\n  const hsva = (\n    typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || { h: 0, s: 0, l: 0, a: 0 }\n  ) as HsvaColor;\n  const handleChange = (hsv: HsvaColor) => onChange && onChange(handleColor(hsv));\n  const [type, setType] = useState(inputType);\n  const handleClick = () => {\n    if (type === ChromeInputType.RGBA) {\n      setType(ChromeInputType.HSLA);\n    }\n    if (type === ChromeInputType.HSLA) {\n      setType(ChromeInputType.HEXA);\n    }\n    if (type === ChromeInputType.HEXA) {\n      setType(ChromeInputType.RGBA);\n    }\n  };\n  const labelStyle: React.CSSProperties = { paddingTop: 6 };\n  const inputStyle: React.CSSProperties = { textAlign: 'center', paddingTop: 4, paddingBottom: 4 };\n  return (\n    <Github\n      ref={ref}\n      color={hsva}\n      style={{ borderRadius: 0, flexDirection: 'column', width: 230, padding: 0, ...style }}\n      colors={undefined}\n      className={[prefixCls, className].filter(Boolean).join(' ')}\n      placement={GithubPlacement.TopLeft}\n      {...other}\n      addonAfter={\n        <Fragment>\n          <Saturation\n            hsva={hsva}\n            style={{ width: '100%', height: 130 }}\n            onChange={(newColor) => {\n              handleChange({ ...hsva, ...newColor, a: hsva.a });\n            }}\n          />\n          <div style={{ padding: 15, display: 'flex', alignItems: 'center' }}>\n            <Alpha\n              width={24}\n              height={24}\n              hsva={hsva}\n              radius={2}\n              style={{\n                marginRight: 15,\n                borderRadius: '50%',\n              }}\n              bgProps={{ style: { background: 'transparent' } }}\n              innerProps={{\n                style: {\n                  borderRadius: '50%',\n                  background: hsvaToRgbaString(hsva),\n                  boxShadow: 'rgb(0 0 0 / 25%) 0px 0px 1px inset',\n                },\n              }}\n              pointer={() => <Fragment />}\n            />\n            <div style={{ flex: 1 }}>\n              <Hue\n                hue={hsva.h}\n                style={{ width: '100%' }}\n                bgProps={{\n                  style: { borderRadius: 2 },\n                }}\n                onChange={(newHue) => {\n                  handleChange({ ...hsva, ...newHue });\n                }}\n              />\n              <Alpha\n                hsva={hsva}\n                style={{ marginTop: 10 }}\n                bgProps={{\n                  style: { borderRadius: 2 },\n                }}\n                onChange={(newAlpha) => {\n                  handleChange({ ...hsva, ...newAlpha });\n                }}\n              />\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'flex-start', padding: '0 15px 15px 15px', userSelect: 'none' }}>\n            <div style={{ flex: 1 }}>\n              {type == ChromeInputType.RGBA && (\n                <EditableInputRGBA\n                  hsva={hsva}\n                  rProps={{ labelStyle, inputStyle }}\n                  gProps={{ labelStyle, inputStyle }}\n                  bProps={{ labelStyle, inputStyle }}\n                  aProps={{ labelStyle, inputStyle }}\n                  onChange={(reColor) => handleChange(reColor.hsva)}\n                />\n              )}\n              {type === ChromeInputType.HEXA && (\n                <EditableInput\n                  label=\"HEX\"\n                  labelStyle={labelStyle}\n                  inputStyle={inputStyle}\n                  value={hsva.a > 0 && hsva.a < 1 ? hsvaToHexa(hsva).toLocaleUpperCase() : hsvaToHex(hsva).toLocaleUpperCase()}\n                  onChange={(_, value) => {\n                    if (typeof value === 'string') {\n                      handleChange(hexToHsva(/^#/.test(value) ? value : `#${value}`));\n                    }\n                  }}\n                />\n              )}\n              {type === ChromeInputType.HSLA && (\n                <EditableInputHSLA\n                  hsva={hsva}\n                  hProps={{ labelStyle, inputStyle }}\n                  sProps={{ labelStyle, inputStyle }}\n                  lProps={{ labelStyle, inputStyle }}\n                  aProps={{ labelStyle, inputStyle }}\n                  onChange={(reColor) => handleChange(reColor.hsva)}\n                />\n              )}\n            </div>\n            <Arrow onClick={handleClick} />\n          </div>\n        </Fragment>\n      }\n      rectRender={({ key }) => <Fragment key={key} />}\n    />\n  );\n});\n\nChrome.displayName = 'Chrome';\n\nexport default Chrome;\n"
  ],
  "mappings": "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"
}
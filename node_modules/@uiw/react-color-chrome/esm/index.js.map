{
  "version": 3,
  "names": [
    "React",
    "Fragment",
    "hsvaToRgbaString",
    "color",
    "handleColor",
    "validHex",
    "hexToHsva",
    "hsvaToHex",
    "hsvaToHexa",
    "Github",
    "GithubPlacement",
    "Saturation",
    "Hue",
    "Alpha",
    "EditableInput",
    "EditableInputRGBA",
    "EditableInputHSLA",
    "useState",
    "Arrow",
    "ChromeInputType",
    "Chrome",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "className",
    "style",
    "inputType",
    "RGBA",
    "rectProps",
    "onChange",
    "other",
    "hsva",
    "h",
    "s",
    "l",
    "a",
    "handleChange",
    "hsv",
    "type",
    "setType",
    "handleClick",
    "HSLA",
    "HEXA",
    "labelStyle",
    "paddingTop",
    "inputStyle",
    "textAlign",
    "paddingBottom",
    "borderRadius",
    "flexDirection",
    "width",
    "padding",
    "undefined",
    "filter",
    "Boolean",
    "join",
    "TopLeft",
    "height",
    "newColor",
    "display",
    "alignItems",
    "marginRight",
    "background",
    "boxShadow",
    "flex",
    "newHue",
    "marginTop",
    "newAlpha",
    "userSelect",
    "reColor",
    "toLocaleUpperCase",
    "_",
    "value",
    "test",
    "key",
    "displayName"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import React, { Fragment } from 'react';\nimport {\n  HsvaColor,\n  hsvaToRgbaString,\n  color as handleColor,\n  validHex,\n  hexToHsva,\n  hsvaToHex,\n  hsvaToHexa,\n} from '@uiw/color-convert';\nimport Github, { GithubProps, GithubPlacement } from '@uiw/react-color-github';\nimport Saturation from '@uiw/react-color-saturation';\nimport Hue from '@uiw/react-color-hue';\nimport Alpha from '@uiw/react-color-alpha';\nimport EditableInput from '@uiw/react-color-editable-input';\nimport EditableInputRGBA from '@uiw/react-color-editable-input-rgba';\nimport EditableInputHSLA from '@uiw/react-color-editable-input-hsla';\nimport { useState } from 'react';\nimport Arrow from './Arrow';\n\nexport enum ChromeInputType {\n  HEXA = 'hexa',\n  RGBA = 'rgba',\n  HSLA = 'hsla',\n}\n\nexport interface ChromeProps extends Omit<GithubProps, 'colors'> {\n  inputType?: ChromeInputType;\n}\n\nconst Chrome = React.forwardRef<HTMLDivElement, ChromeProps>((props, ref) => {\n  const {\n    prefixCls = 'w-color-chrome',\n    className,\n    style,\n    color,\n    inputType = ChromeInputType.RGBA,\n    rectProps = {},\n    onChange,\n    ...other\n  } = props;\n  const hsva = (\n    typeof color === 'string' && validHex(color) ? hexToHsva(color) : color || { h: 0, s: 0, l: 0, a: 0 }\n  ) as HsvaColor;\n  const handleChange = (hsv: HsvaColor) => onChange && onChange(handleColor(hsv));\n  const [type, setType] = useState(inputType);\n  const handleClick = () => {\n    if (type === ChromeInputType.RGBA) {\n      setType(ChromeInputType.HSLA);\n    }\n    if (type === ChromeInputType.HSLA) {\n      setType(ChromeInputType.HEXA);\n    }\n    if (type === ChromeInputType.HEXA) {\n      setType(ChromeInputType.RGBA);\n    }\n  };\n  const labelStyle: React.CSSProperties = { paddingTop: 6 };\n  const inputStyle: React.CSSProperties = { textAlign: 'center', paddingTop: 4, paddingBottom: 4 };\n  return (\n    <Github\n      ref={ref}\n      color={hsva}\n      style={{ borderRadius: 0, flexDirection: 'column', width: 230, padding: 0, ...style }}\n      colors={undefined}\n      className={[prefixCls, className].filter(Boolean).join(' ')}\n      placement={GithubPlacement.TopLeft}\n      {...other}\n      addonAfter={\n        <Fragment>\n          <Saturation\n            hsva={hsva}\n            style={{ width: '100%', height: 130 }}\n            onChange={(newColor) => {\n              handleChange({ ...hsva, ...newColor, a: hsva.a });\n            }}\n          />\n          <div style={{ padding: 15, display: 'flex', alignItems: 'center' }}>\n            <Alpha\n              width={24}\n              height={24}\n              hsva={hsva}\n              radius={2}\n              style={{\n                marginRight: 15,\n                borderRadius: '50%',\n              }}\n              bgProps={{ style: { background: 'transparent' } }}\n              innerProps={{\n                style: {\n                  borderRadius: '50%',\n                  background: hsvaToRgbaString(hsva),\n                  boxShadow: 'rgb(0 0 0 / 25%) 0px 0px 1px inset',\n                },\n              }}\n              pointer={() => <Fragment />}\n            />\n            <div style={{ flex: 1 }}>\n              <Hue\n                hue={hsva.h}\n                style={{ width: '100%' }}\n                bgProps={{\n                  style: { borderRadius: 2 },\n                }}\n                onChange={(newHue) => {\n                  handleChange({ ...hsva, ...newHue });\n                }}\n              />\n              <Alpha\n                hsva={hsva}\n                style={{ marginTop: 10 }}\n                bgProps={{\n                  style: { borderRadius: 2 },\n                }}\n                onChange={(newAlpha) => {\n                  handleChange({ ...hsva, ...newAlpha });\n                }}\n              />\n            </div>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'flex-start', padding: '0 15px 15px 15px', userSelect: 'none' }}>\n            <div style={{ flex: 1 }}>\n              {type == ChromeInputType.RGBA && (\n                <EditableInputRGBA\n                  hsva={hsva}\n                  rProps={{ labelStyle, inputStyle }}\n                  gProps={{ labelStyle, inputStyle }}\n                  bProps={{ labelStyle, inputStyle }}\n                  aProps={{ labelStyle, inputStyle }}\n                  onChange={(reColor) => handleChange(reColor.hsva)}\n                />\n              )}\n              {type === ChromeInputType.HEXA && (\n                <EditableInput\n                  label=\"HEX\"\n                  labelStyle={labelStyle}\n                  inputStyle={inputStyle}\n                  value={hsva.a > 0 && hsva.a < 1 ? hsvaToHexa(hsva).toLocaleUpperCase() : hsvaToHex(hsva).toLocaleUpperCase()}\n                  onChange={(_, value) => {\n                    if (typeof value === 'string') {\n                      handleChange(hexToHsva(/^#/.test(value) ? value : `#${value}`));\n                    }\n                  }}\n                />\n              )}\n              {type === ChromeInputType.HSLA && (\n                <EditableInputHSLA\n                  hsva={hsva}\n                  hProps={{ labelStyle, inputStyle }}\n                  sProps={{ labelStyle, inputStyle }}\n                  lProps={{ labelStyle, inputStyle }}\n                  aProps={{ labelStyle, inputStyle }}\n                  onChange={(reColor) => handleChange(reColor.hsva)}\n                />\n              )}\n            </div>\n            <Arrow onClick={handleClick} />\n          </div>\n        </Fragment>\n      }\n      rectRender={({ key }) => <Fragment key={key} />}\n    />\n  );\n});\n\nChrome.displayName = 'Chrome';\n\nexport default Chrome;\n"
  ],
  "mappings": "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"
}